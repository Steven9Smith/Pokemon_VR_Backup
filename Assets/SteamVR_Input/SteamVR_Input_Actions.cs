//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Vector2 p_default_TouchPadTouch;
        
        private static SteamVR_Action_Boolean p_default_Trigger;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Vector2 p_platformer_Move;
        
        private static SteamVR_Action_Boolean p_platformer_Jump;
        
        private static SteamVR_Action_Vector2 p_buggy_Steering;
        
        private static SteamVR_Action_Single p_buggy_Throttle;
        
        private static SteamVR_Action_Boolean p_buggy_Brake;
        
        private static SteamVR_Action_Boolean p_buggy_Reset;
        
        private static SteamVR_Action_Pose p_mixedreality_ExternalCamera;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Left_Trigger_Click;
        
        private static SteamVR_Action_Single p_controller_Tests_Left_Trigger_Pull;
        
        private static SteamVR_Action_Single p_controller_Tests_Left_Trigger_Touch;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Right_Trigger_Click;
        
        private static SteamVR_Action_Single p_controller_Tests_Right_Trigger_Pull;
        
        private static SteamVR_Action_Single p_controller_Tests_Right_Trigger_Touch;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Left_System_Click;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Right_System_Click;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Left_A_Button;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Left_B_Button;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Right_A_Button;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Right_B_Button;
        
        private static SteamVR_Action_Single p_controller_Tests_Left_Grip_Grab;
        
        private static SteamVR_Action_Single p_controller_Tests_Left_Grip_Force;
        
        private static SteamVR_Action_Single p_controller_Tests_Right_Grip_Grab;
        
        private static SteamVR_Action_Single p_controller_Tests_Right_Grip_Force;
        
        private static SteamVR_Action_Single p_controller_Tests_Left_Grab_Pinch;
        
        private static SteamVR_Action_Single p_controller_Tests_Right_Grab_Pinch;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Left_Thumbstick_Click;
        
        private static SteamVR_Action_Vector2 p_controller_Tests_Left_Thumbstick_Position;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Left_Thumbstick_Touch;
        
        private static SteamVR_Action_Boolean p_controller_Tests_Right_Thumbstick_Click;
        
        private static SteamVR_Action_Single p_controller_Tests_Right_Thumbstick_Touch;
        
        private static SteamVR_Action_Vector2 p_controller_Tests_Right_Thumbstick_Position;
        
        private static SteamVR_Action_Single p_controller_Tests_Left_Trackpad_Touch;
        
        private static SteamVR_Action_Vector2 p_controller_Tests_Left_TrackPad_Position;
        
        private static SteamVR_Action_Vector2 p_controller_Tests_Right_TrackPad_Position;
        
        private static SteamVR_Action_Single p_controller_Tests_Right_TrackPad_Touch;
        
        private static SteamVR_Action_Skeleton p_controller_Tests_Left_Hand_Skeleton;
        
        private static SteamVR_Action_Skeleton p_controller_Tests_Right_Hand_Skeleton;
        
        private static SteamVR_Action_Pose p_controller_Tests_Left_Hand_Pose_Base;
        
        private static SteamVR_Action_Pose p_controller_Tests_Right_Hand_Pose_base;
        
        private static SteamVR_Action_Pose p_controller_Tests_Left_Hand_GDC;
        
        private static SteamVR_Action_Pose p_controller_Tests_Right_hand_GDC;
        
        private static SteamVR_Action_Pose p_controller_Tests_Left_Hand_Hand_Grip;
        
        private static SteamVR_Action_Pose p_controller_Tests_Right_Hand_Hand_Grip;
        
        private static SteamVR_Action_Pose p_controller_Tests_Left_Hand_Raw;
        
        private static SteamVR_Action_Pose p_controller_Tests_Right_Hand_Raw;
        
        private static SteamVR_Action_Pose p_controller_Tests_Left_Hand_Tip;
        
        private static SteamVR_Action_Pose p_controller_Tests_Right_hand_Tip;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_TouchPadTouch
        {
            get
            {
                return SteamVR_Actions.p_default_TouchPadTouch.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Trigger
        {
            get
            {
                return SteamVR_Actions.p_default_Trigger.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 platformer_Move
        {
            get
            {
                return SteamVR_Actions.p_platformer_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Jump
        {
            get
            {
                return SteamVR_Actions.p_platformer_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 buggy_Steering
        {
            get
            {
                return SteamVR_Actions.p_buggy_Steering.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single buggy_Throttle
        {
            get
            {
                return SteamVR_Actions.p_buggy_Throttle.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Brake
        {
            get
            {
                return SteamVR_Actions.p_buggy_Brake.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Reset
        {
            get
            {
                return SteamVR_Actions.p_buggy_Reset.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose mixedreality_ExternalCamera
        {
            get
            {
                return SteamVR_Actions.p_mixedreality_ExternalCamera.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Left_Trigger_Click
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Trigger_Click.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Left_Trigger_Pull
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Trigger_Pull.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Left_Trigger_Touch
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Trigger_Touch.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Right_Trigger_Click
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Trigger_Click.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Right_Trigger_Pull
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Trigger_Pull.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Right_Trigger_Touch
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Trigger_Touch.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Left_System_Click
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_System_Click.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Right_System_Click
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_System_Click.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Left_A_Button
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_A_Button.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Left_B_Button
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_B_Button.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Right_A_Button
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_A_Button.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Right_B_Button
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_B_Button.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Left_Grip_Grab
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Grip_Grab.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Left_Grip_Force
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Grip_Force.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Right_Grip_Grab
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Grip_Grab.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Right_Grip_Force
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Grip_Force.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Left_Grab_Pinch
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Grab_Pinch.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Right_Grab_Pinch
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Grab_Pinch.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Left_Thumbstick_Click
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Thumbstick_Click.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 controller_Tests_Left_Thumbstick_Position
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Thumbstick_Position.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Left_Thumbstick_Touch
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Thumbstick_Touch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean controller_Tests_Right_Thumbstick_Click
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Thumbstick_Click.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Right_Thumbstick_Touch
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Thumbstick_Touch.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vector2 controller_Tests_Right_Thumbstick_Position
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Thumbstick_Position.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Left_Trackpad_Touch
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Trackpad_Touch.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vector2 controller_Tests_Left_TrackPad_Position
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_TrackPad_Position.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 controller_Tests_Right_TrackPad_Position
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_TrackPad_Position.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single controller_Tests_Right_TrackPad_Touch
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_TrackPad_Touch.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Skeleton controller_Tests_Left_Hand_Skeleton
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Hand_Skeleton.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton controller_Tests_Right_Hand_Skeleton
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Hand_Skeleton.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Left_Hand_Pose_Base
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Hand_Pose_Base.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Right_Hand_Pose_base
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Hand_Pose_base.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Left_Hand_GDC
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Hand_GDC.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Right_hand_GDC
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_hand_GDC.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Left_Hand_Hand_Grip
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Hand_Hand_Grip.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Right_Hand_Hand_Grip
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Hand_Hand_Grip.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Left_Hand_Raw
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Hand_Raw.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Right_Hand_Raw
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_Hand_Raw.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Left_Hand_Tip
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Left_Hand_Tip.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose controller_Tests_Right_hand_Tip
        {
            get
            {
                return SteamVR_Actions.p_controller_Tests_Right_hand_Tip.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TouchPadTouch,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Click,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Pull,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Touch,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Click,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Pull,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Touch,
                    SteamVR_Actions.controller_Tests_Left_System_Click,
                    SteamVR_Actions.controller_Tests_Right_System_Click,
                    SteamVR_Actions.controller_Tests_Left_A_Button,
                    SteamVR_Actions.controller_Tests_Left_B_Button,
                    SteamVR_Actions.controller_Tests_Right_A_Button,
                    SteamVR_Actions.controller_Tests_Right_B_Button,
                    SteamVR_Actions.controller_Tests_Left_Grip_Grab,
                    SteamVR_Actions.controller_Tests_Left_Grip_Force,
                    SteamVR_Actions.controller_Tests_Right_Grip_Grab,
                    SteamVR_Actions.controller_Tests_Right_Grip_Force,
                    SteamVR_Actions.controller_Tests_Left_Grab_Pinch,
                    SteamVR_Actions.controller_Tests_Right_Grab_Pinch,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Click,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Position,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Touch,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Click,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Touch,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Position,
                    SteamVR_Actions.controller_Tests_Left_Trackpad_Touch,
                    SteamVR_Actions.controller_Tests_Left_TrackPad_Position,
                    SteamVR_Actions.controller_Tests_Right_TrackPad_Position,
                    SteamVR_Actions.controller_Tests_Right_TrackPad_Touch,
                    SteamVR_Actions.controller_Tests_Left_Hand_Skeleton,
                    SteamVR_Actions.controller_Tests_Right_Hand_Skeleton,
                    SteamVR_Actions.controller_Tests_Left_Hand_Pose_Base,
                    SteamVR_Actions.controller_Tests_Right_Hand_Pose_base,
                    SteamVR_Actions.controller_Tests_Left_Hand_GDC,
                    SteamVR_Actions.controller_Tests_Right_hand_GDC,
                    SteamVR_Actions.controller_Tests_Left_Hand_Hand_Grip,
                    SteamVR_Actions.controller_Tests_Right_Hand_Hand_Grip,
                    SteamVR_Actions.controller_Tests_Left_Hand_Raw,
                    SteamVR_Actions.controller_Tests_Right_Hand_Raw,
                    SteamVR_Actions.controller_Tests_Left_Hand_Tip,
                    SteamVR_Actions.controller_Tests_Right_hand_Tip};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TouchPadTouch,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Click,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Pull,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Touch,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Click,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Pull,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Touch,
                    SteamVR_Actions.controller_Tests_Left_System_Click,
                    SteamVR_Actions.controller_Tests_Right_System_Click,
                    SteamVR_Actions.controller_Tests_Left_A_Button,
                    SteamVR_Actions.controller_Tests_Left_B_Button,
                    SteamVR_Actions.controller_Tests_Right_A_Button,
                    SteamVR_Actions.controller_Tests_Right_B_Button,
                    SteamVR_Actions.controller_Tests_Left_Grip_Grab,
                    SteamVR_Actions.controller_Tests_Left_Grip_Force,
                    SteamVR_Actions.controller_Tests_Right_Grip_Grab,
                    SteamVR_Actions.controller_Tests_Right_Grip_Force,
                    SteamVR_Actions.controller_Tests_Left_Grab_Pinch,
                    SteamVR_Actions.controller_Tests_Right_Grab_Pinch,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Click,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Position,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Touch,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Click,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Touch,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Position,
                    SteamVR_Actions.controller_Tests_Left_Trackpad_Touch,
                    SteamVR_Actions.controller_Tests_Left_TrackPad_Position,
                    SteamVR_Actions.controller_Tests_Right_TrackPad_Position,
                    SteamVR_Actions.controller_Tests_Right_TrackPad_Touch,
                    SteamVR_Actions.controller_Tests_Left_Hand_Skeleton,
                    SteamVR_Actions.controller_Tests_Right_Hand_Skeleton,
                    SteamVR_Actions.controller_Tests_Left_Hand_Pose_Base,
                    SteamVR_Actions.controller_Tests_Right_Hand_Pose_base,
                    SteamVR_Actions.controller_Tests_Left_Hand_GDC,
                    SteamVR_Actions.controller_Tests_Right_hand_GDC,
                    SteamVR_Actions.controller_Tests_Left_Hand_Hand_Grip,
                    SteamVR_Actions.controller_Tests_Right_Hand_Hand_Grip,
                    SteamVR_Actions.controller_Tests_Left_Hand_Raw,
                    SteamVR_Actions.controller_Tests_Right_Hand_Raw,
                    SteamVR_Actions.controller_Tests_Left_Hand_Tip,
                    SteamVR_Actions.controller_Tests_Right_hand_Tip};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.controller_Tests_Left_Hand_Pose_Base,
                    SteamVR_Actions.controller_Tests_Right_Hand_Pose_base,
                    SteamVR_Actions.controller_Tests_Left_Hand_GDC,
                    SteamVR_Actions.controller_Tests_Right_hand_GDC,
                    SteamVR_Actions.controller_Tests_Left_Hand_Hand_Grip,
                    SteamVR_Actions.controller_Tests_Right_Hand_Hand_Grip,
                    SteamVR_Actions.controller_Tests_Left_Hand_Raw,
                    SteamVR_Actions.controller_Tests_Right_Hand_Raw,
                    SteamVR_Actions.controller_Tests_Left_Hand_Tip,
                    SteamVR_Actions.controller_Tests_Right_hand_Tip};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Click,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Click,
                    SteamVR_Actions.controller_Tests_Left_System_Click,
                    SteamVR_Actions.controller_Tests_Right_System_Click,
                    SteamVR_Actions.controller_Tests_Left_A_Button,
                    SteamVR_Actions.controller_Tests_Left_B_Button,
                    SteamVR_Actions.controller_Tests_Right_A_Button,
                    SteamVR_Actions.controller_Tests_Right_B_Button,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Click,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Touch,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Click};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Pull,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Touch,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Pull,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Touch,
                    SteamVR_Actions.controller_Tests_Left_Grip_Grab,
                    SteamVR_Actions.controller_Tests_Left_Grip_Force,
                    SteamVR_Actions.controller_Tests_Right_Grip_Grab,
                    SteamVR_Actions.controller_Tests_Right_Grip_Force,
                    SteamVR_Actions.controller_Tests_Left_Grab_Pinch,
                    SteamVR_Actions.controller_Tests_Right_Grab_Pinch,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Touch,
                    SteamVR_Actions.controller_Tests_Left_Trackpad_Touch,
                    SteamVR_Actions.controller_Tests_Right_TrackPad_Touch};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_TouchPadTouch,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Position,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Position,
                    SteamVR_Actions.controller_Tests_Left_TrackPad_Position,
                    SteamVR_Actions.controller_Tests_Right_TrackPad_Position};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.controller_Tests_Left_Hand_Skeleton,
                    SteamVR_Actions.controller_Tests_Right_Hand_Skeleton};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TouchPadTouch,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Click,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Pull,
                    SteamVR_Actions.controller_Tests_Left_Trigger_Touch,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Click,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Pull,
                    SteamVR_Actions.controller_Tests_Right_Trigger_Touch,
                    SteamVR_Actions.controller_Tests_Left_System_Click,
                    SteamVR_Actions.controller_Tests_Right_System_Click,
                    SteamVR_Actions.controller_Tests_Left_A_Button,
                    SteamVR_Actions.controller_Tests_Left_B_Button,
                    SteamVR_Actions.controller_Tests_Right_A_Button,
                    SteamVR_Actions.controller_Tests_Right_B_Button,
                    SteamVR_Actions.controller_Tests_Left_Grip_Grab,
                    SteamVR_Actions.controller_Tests_Left_Grip_Force,
                    SteamVR_Actions.controller_Tests_Right_Grip_Grab,
                    SteamVR_Actions.controller_Tests_Right_Grip_Force,
                    SteamVR_Actions.controller_Tests_Left_Grab_Pinch,
                    SteamVR_Actions.controller_Tests_Right_Grab_Pinch,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Click,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Position,
                    SteamVR_Actions.controller_Tests_Left_Thumbstick_Touch,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Click,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Touch,
                    SteamVR_Actions.controller_Tests_Right_Thumbstick_Position,
                    SteamVR_Actions.controller_Tests_Left_Trackpad_Touch,
                    SteamVR_Actions.controller_Tests_Left_TrackPad_Position,
                    SteamVR_Actions.controller_Tests_Right_TrackPad_Position,
                    SteamVR_Actions.controller_Tests_Right_TrackPad_Touch};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_TouchPadTouch = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/TouchPadTouch")));
            SteamVR_Actions.p_default_Trigger = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Trigger")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_platformer_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/Move")));
            SteamVR_Actions.p_platformer_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Jump")));
            SteamVR_Actions.p_buggy_Steering = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/buggy/in/Steering")));
            SteamVR_Actions.p_buggy_Throttle = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/buggy/in/Throttle")));
            SteamVR_Actions.p_buggy_Brake = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Brake")));
            SteamVR_Actions.p_buggy_Reset = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Reset")));
            SteamVR_Actions.p_mixedreality_ExternalCamera = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/mixedreality/in/ExternalCamera")));
            SteamVR_Actions.p_controller_Tests_Left_Trigger_Click = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Left_Trigger_Click")));
            SteamVR_Actions.p_controller_Tests_Left_Trigger_Pull = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Left_Trigger_Pull")));
            SteamVR_Actions.p_controller_Tests_Left_Trigger_Touch = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Left_Trigger_Touch")));
            SteamVR_Actions.p_controller_Tests_Right_Trigger_Click = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Right_Trigger_Click")));
            SteamVR_Actions.p_controller_Tests_Right_Trigger_Pull = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Right_Trigger_Pull")));
            SteamVR_Actions.p_controller_Tests_Right_Trigger_Touch = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Right_Trigger_Touch")));
            SteamVR_Actions.p_controller_Tests_Left_System_Click = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Left_System_Click")));
            SteamVR_Actions.p_controller_Tests_Right_System_Click = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Right_System_Click")));
            SteamVR_Actions.p_controller_Tests_Left_A_Button = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Left_A_Button")));
            SteamVR_Actions.p_controller_Tests_Left_B_Button = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Left_B_Button")));
            SteamVR_Actions.p_controller_Tests_Right_A_Button = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Right_A_Button")));
            SteamVR_Actions.p_controller_Tests_Right_B_Button = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Right_B_Button")));
            SteamVR_Actions.p_controller_Tests_Left_Grip_Grab = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Left_Grip_Grab")));
            SteamVR_Actions.p_controller_Tests_Left_Grip_Force = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Left_Grip_Force")));
            SteamVR_Actions.p_controller_Tests_Right_Grip_Grab = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Right_Grip_Grab")));
            SteamVR_Actions.p_controller_Tests_Right_Grip_Force = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Right_Grip_Force")));
            SteamVR_Actions.p_controller_Tests_Left_Grab_Pinch = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Left_Grab_Pinch")));
            SteamVR_Actions.p_controller_Tests_Right_Grab_Pinch = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Right_Grab_Pinch")));
            SteamVR_Actions.p_controller_Tests_Left_Thumbstick_Click = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Left_Thumbstick_Click")));
            SteamVR_Actions.p_controller_Tests_Left_Thumbstick_Position = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Controller_Tests/in/Left_Thumbstick_Position")));
            SteamVR_Actions.p_controller_Tests_Left_Thumbstick_Touch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Left_Thumbstick_Touch")));
            SteamVR_Actions.p_controller_Tests_Right_Thumbstick_Click = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Controller_Tests/in/Right_Thumbstick_Click")));
            SteamVR_Actions.p_controller_Tests_Right_Thumbstick_Touch = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Right_Thumbstick_Touch")));
            SteamVR_Actions.p_controller_Tests_Right_Thumbstick_Position = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Controller_Tests/in/Right_Thumbstick_Position")));
            SteamVR_Actions.p_controller_Tests_Left_Trackpad_Touch = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Left_Trackpad_Touch")));
            SteamVR_Actions.p_controller_Tests_Left_TrackPad_Position = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Controller_Tests/in/Left_TrackPad_Position")));
            SteamVR_Actions.p_controller_Tests_Right_TrackPad_Position = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Controller_Tests/in/Right_TrackPad_Position")));
            SteamVR_Actions.p_controller_Tests_Right_TrackPad_Touch = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Controller_Tests/in/Right_TrackPad_Touch")));
            SteamVR_Actions.p_controller_Tests_Left_Hand_Skeleton = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/Controller_Tests/in/Left_Hand_Skeleton")));
            SteamVR_Actions.p_controller_Tests_Right_Hand_Skeleton = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/Controller_Tests/in/Right_Hand_Skeleton")));
            SteamVR_Actions.p_controller_Tests_Left_Hand_Pose_Base = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Left_Hand_Pose_Base")));
            SteamVR_Actions.p_controller_Tests_Right_Hand_Pose_base = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Right_Hand_Pose_base")));
            SteamVR_Actions.p_controller_Tests_Left_Hand_GDC = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Left_Hand_GDC")));
            SteamVR_Actions.p_controller_Tests_Right_hand_GDC = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Right_hand_GDC")));
            SteamVR_Actions.p_controller_Tests_Left_Hand_Hand_Grip = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Left_Hand_Hand_Grip")));
            SteamVR_Actions.p_controller_Tests_Right_Hand_Hand_Grip = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Right_Hand_Hand_Grip")));
            SteamVR_Actions.p_controller_Tests_Left_Hand_Raw = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Left_Hand_Raw")));
            SteamVR_Actions.p_controller_Tests_Right_Hand_Raw = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Right_Hand_Raw")));
            SteamVR_Actions.p_controller_Tests_Left_Hand_Tip = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Left_Hand_Tip")));
            SteamVR_Actions.p_controller_Tests_Right_hand_Tip = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Controller_Tests/in/Right_hand_Tip")));
        }
    }
}
